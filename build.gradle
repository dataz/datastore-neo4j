/*
 * dataSet - Test Support For Datastores.
 *
 * Copyright (C) 2014-2014 Marko Umek (http://fail-early.com/contact)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */
apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '0.1-SNAPSHOT'
group = 'org.failearly.dataset'
// archivesBaseName='datastore-neo4j'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    project(':dataset')
    // compile group: 'org.failearly.dataset', name: 'dataset-core', version: '+'
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.7'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

test {
    scanForTestClasses = false;
    include 'org/failearly/dataset/**/*Test.class'
}

javadoc {
    failOnError = false

    exclude '**/internal/**'


    options {
        memberLevel = JavadocMemberLevel.PROTECTED
        title = "Fail Early DataSet ${project.name.capitalize()} API - Version ${project.version}"
        windowTitle = title
        linkSource = true
        // TODO : Update stylesheet
        // stylesheetFile = "${rootDir}/doc/css/stylesheet.css" as File
        footer = 'Copyright (C) 2014 <a href="http://fail-early.com">Fail Early</a>. All rights reserved.'
    }
}

task sourcesJar(type: Jar, dependsOn:[classes, test]) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:[javadoc, test]) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

jar {
    dependsOn test
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
